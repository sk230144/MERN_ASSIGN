{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Blog App\\\\client\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { Navigate, Link } from 'react-router-dom'; // Import Link\nimport { UserContext } from '../UserContext';\nimport './register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const {\n    setUserInfo\n  } = useContext(UserContext);\n  async function login(ev) {\n    ev.preventDefault();\n    const response = await fetch(`${window.location.origin}/login`, {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    if (response.ok) {\n      response.json().then(userInfo => {\n        setUserInfo(userInfo);\n        setRedirect(true);\n      });\n    } else {\n      alert('wrong credentials');\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register\",\n      onSubmit: login,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your username or email\",\n        value: username,\n        onChange: ev => setUsername(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter Your Password\",\n        value: password,\n        onChange: ev => setPassword(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Not registered yet?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Register here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LoginPage, \"LD9P9EIaHZQyhjfmlLO+c8f7RPA=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useContext","useState","Navigate","Link","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","username","setUsername","password","setPassword","redirect","setRedirect","setUserInfo","login","ev","preventDefault","response","fetch","window","location","origin","method","body","JSON","stringify","headers","credentials","ok","json","then","userInfo","alert","to","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Blog App/client/src/pages/LoginPage.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { Navigate, Link } from 'react-router-dom'; // Import Link\r\nimport { UserContext } from '../UserContext';\r\nimport './register.css'\r\n\r\nconst LoginPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const { setUserInfo } = useContext(UserContext);\r\n\r\n  async function login(ev) {\r\n    ev.preventDefault();\r\n    const response = await fetch(`${window.location.origin}/login`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ username, password }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n      credentials: 'include',\r\n    });\r\n    if (response.ok) {\r\n      response.json().then(userInfo => {\r\n        setUserInfo(userInfo);\r\n        setRedirect(true);\r\n      });\r\n    } else {\r\n      alert('wrong credentials');\r\n    }\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Navigate to={'/'} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form className='register' onSubmit={login}>\r\n        <h1>Login</h1>\r\n        <input\r\n          type='text'\r\n          placeholder='Enter your username or email'\r\n          value={username}\r\n          onChange={ev => setUsername(ev.target.value)}\r\n        />\r\n        <input\r\n          type='password'\r\n          placeholder='Enter Your Password'\r\n          value={password}\r\n          onChange={ev => setPassword(ev.target.value)}\r\n        />\r\n        <button>Login</button>\r\n      </form>\r\n      <p>\r\n        Not registered yet?{' '}\r\n        <Link to=\"/register\">Register here</Link> {/* Link to the register page */}\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}