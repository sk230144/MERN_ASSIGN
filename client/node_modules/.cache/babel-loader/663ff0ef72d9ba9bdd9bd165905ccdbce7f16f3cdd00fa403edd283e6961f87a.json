{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Blog App\\\\client\\\\src\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageGallery() {\n  _s();\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    // Fetch images from server when the component mounts\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/api/images');\n        const modifiedImages = response.data.map(image => {\n          return {\n            ...image,\n            image: image.image.replace(/\\\\/g, '/') // Replace double backslash with single backslash\n          };\n        });\n\n        setImages(modifiedImages);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    fetchImages();\n  }, []);\n  console.log(images);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Image Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-list\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.image,\n          alt: image.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: image.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, image._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageGallery, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n_c = ImageGallery;\nexport default ImageGallery;\nvar _c;\n$RefreshReg$(_c, \"ImageGallery\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ImageGallery","_s","images","setImages","fetchImages","response","get","modifiedImages","data","map","image","replace","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","name","_id","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Blog App/client/src/Post.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ImageGallery() {\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch images from server when the component mounts\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/api/images');\r\n        const modifiedImages = response.data.map(image => {\r\n          return {\r\n            ...image,\r\n            image: image.image.replace(/\\\\/g, '/') // Replace double backslash with single backslash\r\n          };\r\n        });\r\n        setImages(modifiedImages);\r\n      } catch (error) {\r\n        console.error('Error fetching images:', error);\r\n      }\r\n    };\r\n\r\n    fetchImages();\r\n  }, []);\r\n\r\n console.log(images);\r\n\r\n \r\n  return (\r\n    <div>\r\n      <h2>Image Gallery</h2>\r\n      <div className=\"image-list\">\r\n        {images.map((image) => (\r\n          <div key={image._id} className=\"image-item\">\r\n            <img src={image.image} alt={image.name} />\r\n            <p>{image.name}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageGallery;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,kCAAkC,CAAC;QACpE,MAAMC,cAAc,GAAGF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACC,KAAK,IAAI;UAChD,OAAO;YACL,GAAGA,KAAK;YACRA,KAAK,EAAEA,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;UACzC,CAAC;QACH,CAAC,CAAC;;QACFR,SAAS,CAACI,cAAc,CAAC;MAC3B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDR,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEPS,OAAO,CAACC,GAAG,CAACZ,MAAM,CAAC;EAGlB,oBACEH,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA;MAAKqB,SAAS,EAAC,YAAY;MAAAL,QAAA,EACxBb,MAAM,CAACO,GAAG,CAAEC,KAAK,iBAChBX,OAAA;QAAqBqB,SAAS,EAAC,YAAY;QAAAL,QAAA,gBACzChB,OAAA;UAAKsB,GAAG,EAAEX,KAAK,CAACA,KAAM;UAACY,GAAG,EAAEZ,KAAK,CAACa;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1CpB,OAAA;UAAAgB,QAAA,EAAIL,KAAK,CAACa;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFXT,KAAK,CAACc,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CAvCQD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAyCrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}